{
  "version": 3,
  "sources": ["../../graphology-utils/getters.js"],
  "sourcesContent": ["/**\n * Graphology Weight Getter\n * =========================\n *\n * Function creating weight getters.\n */\nfunction coerceWeight(value) {\n  // Ensuring target value is a correct number\n  if (typeof value !== 'number' || isNaN(value)) return 1;\n\n  return value;\n}\n\nfunction createNodeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, node) {\n      return get(graph.getNodeAttributes(node));\n    };\n    getter.fromEntry = function (node, attributes) {\n      return get(attributes);\n    };\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createNodeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, node) {\n      return coerceToDefault(\n        nameOrFunction(node, graph.getNodeAttributes(node))\n      );\n    };\n    getter.fromEntry = function (node, attributes) {\n      return coerceToDefault(nameOrFunction(node, attributes));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nfunction createEdgeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, edge) {\n      return get(graph.getEdgeAttributes(edge));\n    };\n    getter.fromEntry = function (edge, attributes) {\n      return get(attributes);\n    };\n    getter.fromPartialEntry = getter.fromEntry;\n    getter.fromMinimalEntry = getter.fromEntry;\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createEdgeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, edge) {\n      // TODO: we can do better, check #310\n      var extremities = graph.extremities(edge);\n      return coerceToDefault(\n        nameOrFunction(\n          edge,\n          graph.getEdgeAttributes(edge),\n          extremities[0],\n          extremities[1],\n          graph.getNodeAttributes(extremities[0]),\n          graph.getNodeAttributes(extremities[1]),\n          graph.isUndirected(edge)\n        )\n      );\n    };\n    getter.fromEntry = function (e, a, s, t, sa, ta, u) {\n      return coerceToDefault(nameOrFunction(e, a, s, t, sa, ta, u));\n    };\n    getter.fromPartialEntry = function (e, a, s, t) {\n      return coerceToDefault(nameOrFunction(e, a, s, t));\n    };\n    getter.fromMinimalEntry = function (e, a) {\n      return coerceToDefault(nameOrFunction(e, a));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n    getter.fromMinimalEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nexports.createNodeValueGetter = createNodeValueGetter;\nexports.createEdgeValueGetter = createEdgeValueGetter;\nexports.createEdgeWeightGetter = function (name) {\n  return createEdgeValueGetter(name, coerceWeight);\n};\n"],
  "mappings": "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",
  "names": []
}
